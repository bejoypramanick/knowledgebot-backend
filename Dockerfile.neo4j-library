# Neo4j MCP Server - Custom MCP server for Neo4j operations
FROM public.ecr.aws/lambda/python:3.11

# Set working directory
WORKDIR ${LAMBDA_TASK_ROOT}

# Install system dependencies including build tools
RUN yum update -y && \
    yum groupinstall -y "Development Tools" && \
    yum install -y curl gcc gcc-c++ make python3-devel && \
    yum clean all

# Copy requirements and install Python dependencies
COPY requirements-neo4j-library.txt ${LAMBDA_TASK_ROOT}/
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-neo4j-library.txt

# Install MCP SDK
RUN pip install --no-cache-dir mcp

# Copy the MCP server implementation
COPY microservices/neo4j-mcp-server.py ${LAMBDA_TASK_ROOT}/

# Set environment variables
ENV PYTHONPATH=${LAMBDA_TASK_ROOT}
ENV MCP_SERVER_NAME=neo4j-mcp-server

# Neo4j connection environment variables (will be set at runtime via GitHub Actions)
# These are placeholders - actual values will be injected during deployment
ENV NEO4J_URI=bolt://localhost:7687
ENV NEO4J_USER=neo4j
ENV NEO4J_PASSWORD=placeholder

# Expose port for MCP server
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Start the MCP server
CMD ["python", "neo4j-mcp-server.py"]
