# Dockerfile.final
# Unified final image (core + docling). Python 3.12 Lambda base.
FROM public.ecr.aws/lambda/python:3.12

LABEL maintainer="you@example.com"
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=1

# -------- System packages --------
RUN yum -y update && \
    yum -y install \
      gcc \
      gcc-c++ \
      make \
      git \
      wget \
      unzip \
      libjpeg-turbo-devel \
      freetype-devel \
      zlib-devel \
      openssl-devel \
      libffi-devel \
      poppler-utils \
      ghostscript \
      ImageMagick \
      tesseract \
      tesseract-langpack-eng || true && \
    yum -y install java-11-openjdk-headless libreoffice-headless || true && \
    yum -y install libXrender libXext libSM libX11 procps || true && \
    yum clean all && rm -rf /var/cache/yum

# -------- Upgrade pip & build wheel support --------
RUN python -m pip install --upgrade pip setuptools wheel

# -------- Copy requirements and install --------
COPY requirements.txt /tmp/requirements.txt
# Install numpy first
RUN python -m pip install --no-cache-dir numpy==1.26.4 && \
    python -m pip install --no-cache-dir -r /tmp/requirements.txt

# -------- Copy application code --------
COPY . /var/task
WORKDIR /var/task

# Add runtime healthcheck for doc tools
HEALTHCHECK --interval=60s --timeout=5s --start-period=10s --retries=3 \
  CMD bash -c "command -v tesseract >/dev/null 2>&1 && command -v libreoffice >/dev/null 2>&1 || exit 1"

# Example note: If torch or tensorflow cause image size issues
# consider extracting them into a Lambda Layer or a separate container.
CMD ["lambda_handlers.lambda_handler"]
