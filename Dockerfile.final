# Dockerfile.final
# Complete application: Python 3.12 Lambda base with full ML stack and Docling
FROM public.ecr.aws/lambda/python:3.12

LABEL maintainer="KnowledgeBot Team"
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=1

# Install comprehensive system dependencies for ML and document processing
RUN yum update -y && \
    yum install -y \
    gcc \
    gcc-c++ \
    make \
    libffi-devel \
    openssl-devel \
    zlib-devel \
    bzip2-devel \
    readline-devel \
    sqlite-devel \
    xz-devel \
    expat-devel \
    gdbm-devel \
    ncurses-devel \
    python3-devel \
    pkg-config \
    # Image processing libraries for ML and Docling
    libjpeg-devel \
    libpng-devel \
    libtiff-devel \
    freetype-devel \
    lcms2-devel \
    libwebp-devel \
    # Document processing libraries (Tesseract + Poppler)
    tesseract \
    tesseract-devel \
    tesseract-langpack-eng \
    poppler-utils \
    ghostscript \
    leptonica-devel \
    && yum clean all

# Set Tesseract data path for OCR
ENV TESSDATA_PREFIX=/usr/share/tesseract/tessdata/

# Upgrade pip and install core dependencies
RUN python -m pip install --upgrade pip setuptools wheel

# Install core Python packages
RUN python -m pip install --no-cache-dir \
    boto3>=1.34.0 \
    botocore>=1.34.0 \
    openai>=1.12.0 \
    openai-agents>=0.1.0 \
    pinecone-client>=3.1.0 \
    neo4j>=5.24.0 \
    httpx>=0.25.0 \
    orjson>=3.9.0 \
    structlog>=23.2.0 \
    pydantic>=2.5.0 \
    typing-extensions>=4.9.0

# Install data processing and ML stack
RUN python -m pip install --no-cache-dir \
    numpy>=1.26.0,<2.0.0 \
    pandas>=2.2.0

# Install ML libraries with CPU-only PyTorch for Lambda
RUN python -m pip install --no-cache-dir \
    --extra-index-url https://download.pytorch.org/whl/cpu \
    torch>=2.1.0 \
    torchvision \
    transformers>=4.36.0 \
    sentence-transformers>=2.2.2 \
    tensorflow>=2.14.0

# Install Docling for document processing (now uses the installed PyTorch)
RUN python -m pip install --no-cache-dir \
    docling>=2.25.0

# Copy application code
COPY agent-toolkit/ ${LAMBDA_TASK_ROOT}/

# Set the CMD to your main handler
CMD ["lambda_handlers.lambda_handler_knowledge_chat"]
