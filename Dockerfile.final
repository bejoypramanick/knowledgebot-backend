# Dockerfile.final
# Complete application: Python 3.12 Lambda base with full ML stack and Docling
FROM public.ecr.aws/lambda/python:3.12

# Accept build arguments for environment variables
ARG PINECONE_API_KEY
ARG PINECONE_INDEX_NAME
ARG PINECONE_HOST
ARG PINECONE_DIMENSIONS
ARG OPENAI_API_KEY
ARG NEO4J_URI
ARG NEO4J_USER
ARG NEO4J_PASSWORD
ARG AWS_REGION=ap-south-1

# Set environment variables for build
ENV PINECONE_API_KEY=${PINECONE_API_KEY}
ENV PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME}
ENV PINECONE_HOST=${PINECONE_HOST}
ENV PINECONE_DIMENSIONS=${PINECONE_DIMENSIONS}
ENV OPENAI_API_KEY=${OPENAI_API_KEY}
ENV NEO4J_URI=${NEO4J_URI}
ENV NEO4J_USER=${NEO4J_USER}
ENV NEO4J_PASSWORD=${NEO4J_PASSWORD}
ENV AWS_REGION=${AWS_REGION}

LABEL maintainer="KnowledgeBot Team"
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=1

# Skip system dependencies - try with pre-compiled Python packages first
# ML packages often have ARM64 wheels available

# Upgrade pip and install core dependencies
RUN python -m pip install --upgrade pip setuptools wheel

# Copy requirements and install dependencies
COPY agent-toolkit/requirements.txt ${LAMBDA_TASK_ROOT}/requirements.txt

# Install all dependencies from requirements.txt
RUN python -m pip install --no-cache-dir -r ${LAMBDA_TASK_ROOT}/requirements.txt

# Copy application code
COPY agent-toolkit/ ${LAMBDA_TASK_ROOT}/

# Ensure proper Python module structure
RUN ls -la ${LAMBDA_TASK_ROOT}/ && \
    python -c "import sys; print('Python path:', sys.path)" && \
    python -c "import os; print('Files in task root:', os.listdir('${LAMBDA_TASK_ROOT}'))" && \
    python -c "import lambda_handlers; print('lambda_handlers imported successfully')"

# Make the handler executable
RUN chmod +x ${LAMBDA_TASK_ROOT}/lambda_handlers.py

# Set the Lambda handler function
# AWS Lambda will call the specified handler function when invoked
CMD ["lambda_handlers.lambda_handler"]
# Trigger full deployment
# Trigger fresh build with current code
# Fresh deployment triggered after ECR cleanup - $(date)
