# Dockerfile.core
# Core runtime: Python 3.12 Lambda base with build tools and ML-friendly setup.
FROM public.ecr.aws/lambda/python:3.12

# Metadata
LABEL maintainer="you@example.com"
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=1

# Install system tools and basic native libs (Amazon Linux / Lambda image uses yum)
RUN yum -y update && \
    yum -y install \
      gcc \
      gcc-c++ \
      make \
      git \
      wget \
      unzip \
      libjpeg-turbo-devel \
      freetype-devel \
      zlib-devel \
      openssl-devel \
      bzip2-devel \
      xz-devel \
      libffi-devel \
      ca-certificates \
      which \
      procps || true && \
    yum clean all && rm -rf /var/cache/yum

# Upgrade pip & friends (important for manylinux wheels)
RUN python -m pip install --upgrade pip setuptools wheel

# Copy requirements in
COPY agent-toolkit/requirements.txt /tmp/requirements.txt

# Install numpy first to reduce chance of source builds for other packages
RUN python -m pip install --no-cache-dir numpy==1.26.4 && \
    python -m pip install --no-cache-dir -r /tmp/requirements.txt

# Copy application code (adjust path as required)
COPY . /var/task
WORKDIR /var/task

# Default Lambda handler - change to your handler
CMD ["lambda_handlers.lambda_handler"]
