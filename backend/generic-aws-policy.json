{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Sid": "AllowS3Storage",
			"Effect": "Allow",
			"Action": [
				"s3:PutBucketNotification",
				"s3:GetBucketNotification",
				"s3:PutLifecycleConfiguration",
				"s3:CreateBucket",
				"s3:DeleteBucket",
				"s3:PutObject",
				"s3:GetObject",
				"s3:DeleteObject",
				"s3:ListBucket",
				"s3:GetBucketLocation",
				"s3:GetBucketVersioning",
				"s3:PutBucketVersioning",
				"s3:PutBucketPublicAccessBlock",
				"s3:GetBucketPublicAccessBlock",
				"s3:GetBucketCORS",
				"s3:PutBucketCORS",
				"s3:ListAllMyBuckets"
			],
			"Resource": "*"
		},
		{
			"Sid": "AllowDynamoDB",
			"Effect": "Allow",
			"Action": [
				"dynamodb:CreateTable",
				"dynamodb:DeleteTable",
				"dynamodb:PutItem",
				"dynamodb:GetItem",
				"dynamodb:UpdateItem",
				"dynamodb:DeleteItem",
				"dynamodb:BatchWriteItem",
				"dynamodb:BatchGetItem",
				"dynamodb:Query",
				"dynamodb:Scan",
				"dynamodb:DescribeTable",
				"dynamodb:ListTables",
				"dynamodb:UpdateTable",
				"dynamodb:TagResource",
				"dynamodb:UntagResource",
				"dynamodb:ListTagsOfResource",
				"dynamodb:UpdateTimeToLive",
				"dynamodb:DescribeTimeToLive"
			],
			"Resource": "*"
		},
		{
			"Sid": "AllowLambda",
			"Effect": "Allow",
			"Action": [
				"lambda:ListFunctions",
				"lambda:CreateFunction",
				"lambda:UpdateFunctionCode",
				"lambda:UpdateFunctionConfiguration",
				"lambda:DeleteFunction",
				"lambda:InvokeFunction",
				"lambda:GetFunction",
				"lambda:GetFunctionConfiguration",
				"lambda:AddPermission",
				"lambda:RemovePermission",
				"lambda:GetPolicy",
				"lambda:TagResource",
				"lambda:UntagResource",
				"lambda:ListTags",
				"lambda:PublishVersion",
				"lambda:CreateAlias",
				"lambda:UpdateAlias",
				"lambda:DeleteAlias",
				"lambda:GetAlias",
				"lambda:ListAliases",
				"lambda:GetLayerVersion",
				"lambda:ListLayerVersions",
				"lambda:ListLayers",
				"lambda:GetFunctionCodeSigningConfig",
				"lambda:PutFunctionCodeSigningConfig",
				"lambda:DeleteFunctionCodeSigningConfig",
				"lambda:GetCodeSigningConfig",
				"lambda:CreateCodeSigningConfig",
				"lambda:UpdateCodeSigningConfig",
				"lambda:DeleteCodeSigningConfig",
				"lambda:ListCodeSigningConfigs"
			],
			"Resource": "*"
		},
		{
			"Sid": "AllowServiceLinkedRoles",
			"Effect": "Allow",
			"Action": [
				"iam:CreateServiceLinkedRole",
				"iam:DeleteServiceLinkedRole",
				"iam:GetServiceLinkedRoleDeletionStatus"
			],
			"Resource": "*"
		},
		{
			"Sid": "AllowAPIGateway",
			"Effect": "Allow",
			"Action": [
				"apigateway:POST",
				"apigateway:PUT",
				"apigateway:PATCH",
				"apigateway:DELETE",
				"apigateway:GET"
			],
			"Resource": "*"
		},
		{
			"Sid": "AllowCloudWatchLogs",
			"Effect": "Allow",
			"Action": [
				"logs:CreateLogGroup",
				"logs:CreateLogStream",
				"logs:PutLogEvents",
				"logs:DescribeLogGroups",
				"logs:DescribeLogStreams",
				"logs:GetLogEvents",
				"logs:FilterLogEvents",
				"logs:PutRetentionPolicy",
				"logs:DeleteLogGroup",
				"logs:DeleteLogStream",
				"logs:TagLogGroup",
				"logs:UntagLogGroup"
			],
			"Resource": "*"
		},
		{
			"Sid": "AllowIAM",
			"Effect": "Allow",
			"Action": [
				"iam:PassRole",
				"iam:CreateRole",
				"iam:DeleteRole",
				"iam:GetRole",
				"iam:ListRoles",
				"iam:AttachRolePolicy",
				"iam:DetachRolePolicy",
				"iam:ListAttachedRolePolicies",
				"iam:PutRolePolicy",
				"iam:DeleteRolePolicy",
				"iam:GetRolePolicy",
				"iam:ListRolePolicies",
				"iam:TagRole",
				"iam:UntagRole",
				"iam:GetUser",
				"iam:ListAttachedUserPolicies",
				"iam:AttachUserPolicy",
				"iam:DetachUserPolicy",
				"iam:CreatePolicy",
				"iam:DeletePolicy",
				"iam:GetPolicy",
				"iam:ListPolicies",
				"iam:CreatePolicyVersion",
				"iam:DeletePolicyVersion",
				"iam:GetPolicyVersion",
				"iam:ListPolicyVersions",
				"iam:SetDefaultPolicyVersion"
			],
			"Resource": "*"
		},
		{
			"Sid": "AllowSTS",
			"Effect": "Allow",
			"Action": [
				"sts:GetCallerIdentity",
				"sts:AssumeRole"
			],
			"Resource": "*"
		},
		{
			"Sid": "AllowECR",
			"Effect": "Allow",
			"Action": [
				"ecr:GetAuthorizationToken",
				"ecr:DescribeRepositories",
				"ecr:DescribeImages",
				"ecr:BatchGetImage",
				"ecr:GetDownloadUrlForLayer",
				"ecr:BatchCheckLayerAvailability",
				"ecr:CreateRepository",
				"ecr:DeleteRepository",
				"ecr:GetRepositoryPolicy",
				"ecr:SetRepositoryPolicy",
				"ecr:DeleteRepositoryPolicy",
				"ecr:GetLifecyclePolicy",
				"ecr:PutLifecyclePolicy",
				"ecr:DeleteLifecyclePolicy",
				"ecr:GetLifecyclePolicyPreview",
				"ecr:StartLifecyclePolicyPreview",
				"ecr:PutImage",
				"ecr:InitiateLayerUpload",
				"ecr:UploadLayerPart",
				"ecr:CompleteLayerUpload",
				"ecr:PutImageScanningConfiguration",
				"ecr:StartImageScan",
				"ecr:DescribeImageScanFindings",
				"ecr:BatchDeleteImage",
				"ecr:TagResource",
				"ecr:UntagResource",
				"ecr:ListTagsForResource"
			],
			"Resource": "*"
		},
		{
			"Sid": "AllowECRForLambdaExecution",
			"Effect": "Allow",
			"Action": [
				"ecr:GetAuthorizationToken",
				"ecr:BatchCheckLayerAvailability",
				"ecr:GetDownloadUrlForLayer",
				"ecr:BatchGetImage"
			],
			"Resource": "*"
		}
	]
}
