# Sentence Transformers Base Image - Pre-installed with all models
FROM public.ecr.aws/lambda/python:3.12

# Install sentence-transformers and dependencies
RUN pip install --upgrade pip && \
    pip install --upgrade "setuptools>=68.0.0" wheel && \
    pip install --no-cache-dir \
    "sentence-transformers>=2.7.0,<3.0.0" \
    "numpy>=1.26.0,<2.0.0" \
    "torch>=2.0.0" \
    "transformers>=4.30.0"

# Pre-download and cache the most commonly used models
# This ensures models are available without runtime downloads
RUN python -c "\
import os; \
from sentence_transformers import SentenceTransformer; \
cache_dir = '/tmp/sentence_transformers_cache'; \
os.makedirs(cache_dir, exist_ok=True); \
os.environ['TRANSFORMERS_CACHE'] = '/tmp/transformers_cache'; \
os.environ['HF_HOME'] = '/tmp/huggingface_cache'; \
os.environ['HF_DATASETS_CACHE'] = '/tmp/huggingface_datasets_cache'; \
os.environ['TORCH_HOME'] = '/tmp/torch_cache'; \
os.environ['SENTENCE_TRANSFORMERS_HOME'] = cache_dir; \
models = ['all-MiniLM-L6-v2', 'all-mpnet-base-v2', 'paraphrase-multilingual-MiniLM-L12-v2']; \
[print(f'Downloading model: {model_name}') or SentenceTransformer(model_name, cache_folder=cache_dir) or print(f'Model {model_name} downloaded successfully') for model_name in models]; \
print('All sentence-transformers models pre-loaded successfully in /tmp')"

# Set environment variables for consistent caching in /tmp
ENV TRANSFORMERS_CACHE=/tmp/transformers_cache
ENV HF_HOME=/tmp/huggingface_cache
ENV HF_DATASETS_CACHE=/tmp/huggingface_datasets_cache
ENV TORCH_HOME=/tmp/torch_cache
ENV SENTENCE_TRANSFORMERS_HOME=/tmp/sentence_transformers_cache

# Create a simple test script to verify the installation
RUN echo '#!/usr/bin/env python3\n\
from sentence_transformers import SentenceTransformer\n\
import os\n\
\n\
os.environ["TRANSFORMERS_CACHE"] = "/tmp/sentence_transformers_cache"\n\
os.environ["HF_HOME"] = "/tmp/sentence_transformers_cache"\n\
\n\
# Test the most commonly used model\n\
model = SentenceTransformer("all-MiniLM-L6-v2")\n\
test_embedding = model.encode("This is a test sentence")\n\
print(f"Sentence transformers base image ready! Embedding dimension: {len(test_embedding)}")\n\
' > /usr/local/bin/test_sentence_transformers.py && chmod +x /usr/local/bin/test_sentence_transformers.py

# Label for identification
LABEL base_image="sentence-transformers" \
      version="1.0" \
      description="Pre-installed sentence-transformers with common models"
